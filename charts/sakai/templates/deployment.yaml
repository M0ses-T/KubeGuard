apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    environment: {{ .Values.metadata.labels.environment }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      environment: {{ .Values.metadata.labels.environment }}
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        environment: {{ .Values.metadata.labels.environment }}
    spec:
      {{ if or .Values.global.nodeSelector .Values.nodeSelector }}
      nodeSelector:
      {{ if .Values.nodeSelector }}
      {{ .Values.nodeSelector | toYaml | nindent 8}}
      {{ else }}
      {{.Values.global.nodeSelector | toYaml | nindent 8}}
      {{ end }}
      {{ end }}

      {{ if or .Values.global.affinity .Values.affinity }}
      affinity:
      {{ if .Values.affinity }}
      {{ .Values.affinity | toYaml | nindent 8}}
      {{ else }}
      {{.Values.global.affinity | toYaml | nindent 8}}
      {{ end }}
      {{ end }}

      {{ if or .Values.global.tolerations .Values.tolerations }}
      tolerations:
      {{ if .Values.tolerations }}
      {{ .Values.tolerations | toYaml | nindent 8}}
      {{ else }}
      {{.Values.global.tolerations | toYaml | nindent 8}}
      {{ end }}
      {{ end }}

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
          # envFrom:
          #   - configMapRef:
          #       name: {{ .Chart.Name }}-config
          #       optional: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # volumeMounts:
          #   - mountPath: /usr/local/sakai/properties/sakai.properties
          #     name: sakai-config
            # - mountPath: /run/secrets
            #   name: security-config
            #   subPath: security.properties
      restartPolicy: Always
      # volumes:
      #   - configMap:
      #       items:
      #         - key: sakai-config-properties
      #           path: sakai.properties
      #       name: sakai-config
      #     name: sakai-config
      #   # - name: security-config
        #   secret:
        #     items:
        #       - key: securityproperties
        #         path: security.properties
        #     secretName: securityproperties
